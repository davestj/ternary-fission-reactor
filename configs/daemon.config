# Daemon Configuration File for Ternary Fission Reactor System
# File: configs/daemon.config
# Author: bthlops (David StJ)  
# Date: January 31, 2025
# Title: Complete daemon configuration for distributed physics simulation system
# Purpose: Centralized configuration for HTTP daemon, SSL/TLS, physics engine, and logging
# Reason: Production-ready configuration supporting distributed daemon architecture
#
# Change Log:
# 2025-01-31: Initial configuration for distributed daemon architecture Phase 1
#             Added complete network configuration for HTTP/HTTPS server operation  
#             Implemented SSL/TLS certificate paths and cipher suite configuration
#             Added physics simulation parameters with theoretical constraints
#             Configured logging with rotation and multiple output destinations
#             Added daemon process management settings for systemd integration
#
# Carry-over Context:
# - This configuration supports the distributed daemon architecture outlined in ARCH.md
# - Network settings enable HTTP/HTTPS REST API server for physics calculations
# - SSL configuration enables production HTTPS deployment with certificate management
# - Physics parameters are validated against theoretical constraints in simulation engine
# - Logging configuration supports both development debugging and production monitoring
# - Daemon settings enable systemd service deployment across server clusters
# - Environment variable overrides: TERNARY_* prefix for all configuration parameters
# - Next: Integration with daemon.ternary.fission.server class for process management

# =============================================================================
# NETWORK CONFIGURATION - HTTP/HTTPS Server Settings
# =============================================================================

# We configure network binding for HTTP server operations
# The bind_ip determines which network interface the daemon will listen on
# Use 127.0.0.1 for development, 0.0.0.0 for production deployment
bind_ip = 127.0.0.1

# We set the network port for HTTP/HTTPS server binding
# Standard ports: 8333 (HTTP), 8443 (HTTPS), avoid well-known ports in production
bind_port = 8333

# We enable SSL/TLS for HTTPS operation (false = HTTP, true = HTTPS)
# SSL requires valid certificate and private key files configured below
enable_ssl = false

# We specify SSL certificate file path for HTTPS operation
# Certificate must be PEM format, can be single cert or full chain
# Leave empty to disable SSL or use auto-detection from standard paths
ssl_cert_path = /etc/ssl/certs/ternary-fission.crt

# We specify SSL private key file path for HTTPS operation  
# Private key must be PEM format and match the certificate
# Ensure proper file permissions (600) for security
ssl_key_path = /etc/ssl/private/ternary-fission.key

# We specify SSL CA certificate or chain file path
# Used for client certificate verification and chain validation
# Optional for most deployments, required for client certificate auth
ssl_ca_path = /etc/ssl/certs/ternary-fission-ca.crt

# We set maximum concurrent HTTP connections
# Adjust based on server capacity and expected load
# Range: 1-65535, recommended: 1000 for production
max_connections = 1000

# We configure connection timeout in seconds
# Prevents hanging connections from consuming resources
# Range: 1-3600, recommended: 30 for responsive API
connection_timeout = 30

# We enable Cross-Origin Resource Sharing (CORS) for browser clients
# Required for web-based monitoring interfaces and API testing
enable_cors = true

# We specify allowed CORS origins for security
# Use "*" for development, specific origins for production
# Multiple origins: origin1.com,origin2.com,origin3.com
cors_origins = *

# We set maximum HTTP request size in bytes (10MB default)
# Prevents DoS attacks through large request bodies
# Range: 1024-1073741824 (1KB-1GB), recommended: 10MB for API
request_size_limit = 10485760

# =============================================================================
# DAEMON CONFIGURATION - Process Management Settings  
# =============================================================================

# We enable daemon mode for background operation
# true = run as background daemon, false = run in foreground
# Enable for production systemd deployment, disable for development
daemon_mode = false

# We specify PID file path for daemon process tracking
# Used by systemd and process management tools
# Ensure directory exists and daemon has write permissions
pid_file_path = /var/run/ternary-fission-daemon.pid

# We set daemon working directory
# Daemon will chdir() to this directory after initialization
# Use "/" for production, current directory for development
working_directory = /

# We specify user to run daemon process as
# Leave empty to run as current user, specify for privilege separation
# Recommended: create dedicated ternary-fission user for production
daemon_user = 

# We specify group to run daemon process as  
# Leave empty to use user's primary group
# Recommended: create dedicated ternary-fission group for production
daemon_group = 

# We set file creation mask (umask) for daemon process
# Controls default permissions for files created by daemon
# 022 = readable by all, writable by owner only
daemon_umask = 022

# We enable PID file creation for process management
# Required for systemd and other process managers
create_pid_file = true

# We configure graceful shutdown timeout in seconds
# Maximum time to wait for clean shutdown before force termination
# Range: 1-300, recommended: 30 for database consistency
shutdown_timeout = 30

# =============================================================================
# SSL/TLS CONFIGURATION - Certificate and Encryption Settings
# =============================================================================

# We specify SSL cipher suite for secure connections
# Modern cipher suite focusing on security and performance
# ECDHE provides forward secrecy, AES-GCM provides authenticated encryption
ssl_cipher_suite = ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256

# We enable client certificate verification  
# false = server-only SSL, true = mutual TLS authentication
# Enable for high-security environments requiring client certificates
ssl_verify_client = false

# We specify SSL/TLS protocol version
# 0 = auto-negotiate best available, 1 = TLS 1.0, 2 = TLS 1.1, 3 = TLS 1.2, 4 = TLS 1.3
# Recommended: 0 for compatibility, 4 for maximum security
ssl_protocol_version = 0

# We enable automatic certificate reloading
# Monitors certificate files for changes and reloads without restart
# Useful for Let's Encrypt and other automated certificate renewal
ssl_auto_reload = true

# =============================================================================
# PHYSICS CONFIGURATION - Simulation Engine Parameters
# =============================================================================

# We set default parent nucleus mass in atomic mass units (AMU)
# Standard U-235 mass for uranium fission calculations
# Range: 1.0-400.0 AMU, typical fissile isotopes: 233-239 AMU
parent_mass = 235.044063

# We configure default excitation energy in MeV
# Energy above ground state required to initiate fission
# Range: 0.1-20.0 MeV, typical thermal fission: 6.0-7.0 MeV
excitation_energy = 6.534

# We set maximum energy field strength in MeV
# Upper limit for energy field calculations to prevent overflow
# Range: 100.0-10000.0 MeV, recommended: 1000.0 for safety
max_energy_field = 1000.0

# We set minimum energy field strength in MeV  
# Lower limit for meaningful physics calculations
# Range: 0.001-10.0 MeV, recommended: 0.1 for precision
min_energy_field = 0.1

# We configure physics calculation thread count
# 0 = auto-detect CPU cores, >0 = specific thread count
# Optimal: CPU core count for CPU-bound calculations
num_threads = 0

# We set conservation law validation tolerance
# Maximum deviation allowed in energy/momentum conservation checks
# Scientific notation: 1e-6 = 0.000001, tighter tolerance = more accurate
conservation_tolerance = 1e-6

# We enable conservation law verification
# true = validate energy/momentum conservation, false = skip checks
# Always enable for physics accuracy, disable only for performance testing
enable_conservation_checks = true

# We configure simulation events per second rate
# Controls real-time simulation speed for continuous operation
# Range: 0.1-1000.0 events/sec, recommended: 5.0 for visualization
events_per_second = 5.0

# We set maximum events per API request
# Prevents memory exhaustion from large batch calculations
# Range: 1-1000000, recommended: 100000 for reasonable response times
max_events_per_request = 100000

# =============================================================================
# LOGGING CONFIGURATION - Output and File Management
# =============================================================================

# We set logging verbosity level
# Levels: debug, info, warn, error, fatal
# debug = verbose output, info = normal operation, error = problems only
log_level = info

# We specify access log file path for HTTP request logging
# Contains all HTTP requests with timestamps, IPs, and response codes
# Ensure directory exists and daemon has write permissions
access_log_path = logs/daemon-access.log

# We specify error log file path for error message logging
# Contains application errors, exceptions, and critical issues
# Monitor this file for operational problems
error_log_path = logs/daemon-error.log

# We specify debug log file path for detailed diagnostic logging
# Contains verbose debugging information and internal state
# Enable debug log_level to populate this file
debug_log_path = logs/daemon-debug.log

# We enable console logging output
# true = log to stdout/stderr, false = file logging only
# Enable for development, disable for systemd deployment
enable_console_logging = true

# We enable file logging output
# true = log to files, false = console logging only
# Always enable for production to maintain persistent logs
enable_file_logging = true

# We set maximum log file size in bytes (100MB default)
# Files are rotated when this size is exceeded
# Range: 1048576-1073741824 (1MB-1GB), recommended: 100MB
max_log_file_size = 104857600

# We configure number of rotated log files to retain
# Older files are deleted when rotation count is exceeded
# Range: 1-100, recommended: 10 for reasonable disk usage
log_rotation_count = 10

# We enable structured JSON logging format
# false = human-readable text, true = machine-parseable JSON
# Enable for log aggregation systems like ELK stack
enable_json_logging = false

# We specify timestamp format for log entries
# Standard strftime format string for log timestamps
# %Y-%m-%d %H:%M:%S = ISO-like format for readability
log_timestamp_format = %Y-%m-%d %H:%M:%S

# =============================================================================
# ENVIRONMENT VARIABLE OVERRIDES
# =============================================================================
#
# We support environment variable overrides for all configuration parameters
# Environment variables use TERNARY_ prefix followed by parameter name
# Examples:
#   TERNARY_BIND_IP=0.0.0.0
#   TERNARY_BIND_PORT=8443  
#   TERNARY_ENABLE_SSL=true
#   TERNARY_DAEMON_MODE=true
#   TERNARY_PARENT_MASS=239.052163
#   TERNARY_EXCITATION_ENERGY=7.2
#   TERNARY_EVENTS_PER_SECOND=10.0
#   TERNARY_LOG_LEVEL=debug
#
# Environment variables take precedence over configuration file values
# Useful for containerized deployments and CI/CD pipelines

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================
#
# For production deployment, we recommend the following changes:
#
# 1. Network Security:
#    - Set bind_ip = 0.0.0.0 for external access
#    - Enable SSL with valid certificates
#    - Restrict cors_origins to specific domains
#    - Use non-standard ports to reduce attack surface
#
# 2. Process Management:
#    - Enable daemon_mode = true
#    - Create dedicated user/group for daemon
#    - Set proper file permissions on config and certificates
#    - Configure systemd service file for automatic startup
#
# 3. Logging and Monitoring:
#    - Set log_level = warn or error for production
#    - Enable file logging with appropriate rotation
#    - Monitor log files for errors and security issues
#    - Configure log aggregation for centralized monitoring
#
# 4. Resource Management:
#    - Adjust max_connections based on server capacity
#    - Set num_threads to match CPU architecture
#    - Monitor memory usage and adjust limits accordingly
#    - Configure appropriate physics parameters for workload
#
# 5. Security Hardening:
#    - Use strong SSL cipher suites and disable weak protocols
#    - Enable client certificate verification for sensitive deployments
#    - Implement rate limiting and DDoS protection at network level
#    - Regular security updates and certificate rotation
#
# =============================================================================
# END OF CONFIGURATION FILE
# =============================================================================
